# .github/workflows/evaluation.yml
name: üîÅ Call Evaluation Workflow (standard)

on:
  workflow_dispatch:  # Enables manual trigger
  push: # Trigger on pushes to feature branches
    branches:
      - 'feature/evaluation-pipeline*' 
  pull_request: # Trigger on PRs to main branch
    types: [opened, synchronize, reopened]
    paths:
      - 'src/*.py'
      - 'evaluation/evaluation.py'
      - 'src/evaluatio/evaluation.py'

permissions:
  pull-requests: write # For commenting on PRs
  issues: write # For commenting on issues

jobs:
  run-evaluation:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      - name: Checkout repository # Check out the code
        uses: actions/checkout@v3 

      - name: Set up Python # Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies  
        run: |
          python -m pip install --upgrade pip
          pip install numpy

      - name: Run evaluation.py  
        run: python evaluation/evaluation.py
    
      - name: Comment on PR with results  
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');

            let results = '';
            if (fs.existsSync('results.md')) {
              results = fs.readFileSync('results.md', 'utf8');
            } else {
              results = 'No results.md file found.';
            }
            const actor = process.env.GITHUB_ACTOR || 'unknown';
            const runUrl = `https://github.com/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const body = `‚úÖ **Workflow Result**\n\n${results}\n\n_triggered by **${actor}**_\n\nüîó [View full pipeline run](${runUrl})`;
            
            github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body
            });
